{"version":3,"sources":["shared/components/layout/Header.js","components/Map.js","components/List.js","components/Content.js","api/Venues.js","shared/components/layout/Footer.js","App.js","index.js","registerServiceWorker.js"],"names":["Header","props","_props$title","title","url","react_default","a","createElement","id","aria-label","tabIndex","Map","markers","addMarkers","venues","window","google","infowindow","maps","InfoWindow","_loop","i","marker","Marker","position","lat","venue","location","lng","map","googleMapObject","addListener","setContent","concat","name","address","open","_this","push","length","filterMarkersOnMap","setMap","this","React","Component","List","textString","htmlFor","type","value","onChange","e","changeMarker","target","ven","key","href","aria-required","onClick","showInfo","Content","state","allVenues","text","clickMarker","venueID","content","constructInfo","console","log","mapDataProviders","updateContent","setState","filterItems","filter","toLowerCase","includes","item","_this2","fetch","then","response","json","result","groups","items","className","components_List","components_Map","Footer","Date","getFullYear","alt","App","document","getElementById","center","zoom","script","getElementsByTagName","scriptFromMap","makeMapScript","parentNode","insertBefore","onerror","alert","src","initMap","mapScript","async","defer","loadScript","layout_Header","components_Content","layout_Footer","ReactDOM","render","src_App_0","navigator","addEventListener","serviceWorker","register","catch"],"mappings":"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","file":"static/js/main.9d07f49e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types';\n\n\nconst Header = props => {\n  const {\n    title = 'Neighborhood Map: Puna District Grocers',\n    url = 'http://localhost:3000'\n  } = props;\n\n  return (\n    <header id=\"header\">\n      <h1 aria-label=\"home\" tabIndex=\"1\" id=\"title\">{title}</h1>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string\n};\n\nexport default Header;","import React, { Component } from \"react\";\n\nclass Map extends React.Component {\n  markers = [];\n  addMarkers = venues => {\n    if (window.google) {\n\n      // https://developers.google.com/maps/documentation/javascript/infowindows\n      let infowindow = new window.google.maps.InfoWindow();\n\n      for (let i = 0; i <  venues.length; i++) {\n        let marker = new window.google.maps.Marker({\n          position:{\n          lat: venues[i].venue.location.lat,\n          lng: venues[i].venue.location.lng \n          },\n          map: window.googleMapObject,\n          title: venues[i].venue.id\n        });\n\n        // infowindow opens on map object and add marker\n        marker.addListener('click', function() {\n          infowindow.setContent(`<div>\n          <p>Name: <a href=\"#\">${venues[i].venue.name}</a></p>\n          <p>Address: ${venues[i].venue.location.address}</p>\n        </div>`);\n\n          infowindow.open(window.googleMapObject, marker);\n        });\n    \n        this.markers.push(marker);\n      }\n      window.markers = this.markers;\n      window.infowindow = infowindow; // GO GLOBAL!!!\n    }\n  };\n\n  filterMarkersOnMap = () => {\n    for (let i = 0; i < this.markers.length; i++) {\n      this.markers[i].setMap(null);\n    }\n  }\n\n  constructInfo(venue) {\n    // for future use instead of infowindow.setContent(), here or parent?\n  }\n  \n  render() {\n    {/*  clear and add markers */}\n    this.filterMarkersOnMap();\n    this.addMarkers(this.props.venues);\n    return <div id=\"map\" />;\n  }\n}\nexport default Map;","import React from \"react\";\nimport Map from \"./Map\"; \n\nclass List extends React.Component {\n  render() {\n    // list of venues\n    const venues = this.props.venues;\n\n    return (\n      <div id=\"list\">\n        <h2>Local Grocers</h2>\n        <p>{this.props.textString}</p>\n        <label tabIndex=\"0\" htmlFor=\"namedInput\">Filter By Name:</label>\n        <input tabIndex=\"2\" id=\"namedInput\" type=\"text\" name=\"name\" value={this.props.textString} onChange={e => this.props.changeMarker(e.target.value)} />\n        <ol>\n          {venues.map(ven => (       \n            <li key={ven.venue.id} tabIndex=\"2\">\n              <div>\n      \n                <p>Name: \n                  <a \n                    href=\"#\" \n                    type=\"text\"\n                    aria-label={ven.venue.name}\n                    aria-required=\"true\" \n                    onClick={() => this.props.showInfo(ven)}>\n                      {ven.venue.name}\n                  </a>\n                </p>\n                <p>Address: {ven.venue.location.address}</p>\n              </div>\n            </li>\n          ))}\n        </ol>\n      </div>\n    );\n  }\n}\n\nexport default List;","import React from \"react\";\nimport Map from \"./Map\";\nimport List from \"./List\";\n// import { getVenues } from \"../api/Venues\";\nimport * as VenuesAPI from \"../api/Venues\";\n\nclass Content extends React.Component {\n  // React handles state of data. Use JSON object\n  state = {\n    venues: [],\n    allVenues: [],\n    text: \"\"\n  };\n\n  componentDidMount() {\n    VenuesAPI.getVenues().then(response => this.setState({ venues: response, allVenues: response }));\n  }\n\n\n  clickMarker = venueID => {\n    for (let i = 0; i < window.markers.length; i++) {\n      \n      if (venueID.venue.id === window.markers[i].title) {\n        let content = this.constructInfo(venueID);\n\n        console.log('id/title', window.markers[i].title, venueID.venue.id);\n        console.log(window.googleMapObject.mapDataProviders); \n        window.infowindow.setContent(content);\n        window.infowindow.open(window.googleMapObject, window.markers[i]);\n      }\n\n    }\n  };\n  \n  updateContent = (text) => {\n    this.setState({ text });\n    if (text) {\n      this.setState({venues: this.filterItems(text, this.state.venues)});\n    } else {\n      this.setState({venues: this.state.allVenues});\n    }\n  }\n\n  filterItems = (text, venues) => {\n    return venues.filter(venueID => venueID.venue.name.toLowerCase().includes(text.toLowerCase()));\n  }\n\n  constructInfo = item => {\n    return `<div>\n      <p>Name: <a href=\"#\">${item.venue.name}</a></p>\n      <p>Address: ${item.venue.location.address}</p>\n    </div>`;\n  };\n\n  render() {\n    console.log(this.state.venues);\n    return (\n      <div className=\"content\">\n        <List \n          venues={this.state.venues} \n          showInfo={this.clickMarker} \n          textString={this.state.text} \n          changeMarker={this.updateContent}/>\n        <Map venues={this.state.venues} />\n      </div>\n    );\n  }\n}\n\nexport default Content;","const CLIENT = \"QEDGLBW2DKG1VNT15ERQBMZCCLVKO4J3JDNP4UJQTLH35FBZ\";\nconst SECRET = \"SDEEK4HQN34GE24JP2TELDEJWX3CRI3V1X0YLO4CV15FF4CJ\";\n\n// Grocery Store - 4bf58dd8d48988d118951735\n// Supermarket 52f2ab2ebcbc57f1066b8b46\n\n// Health Food Store 50aa9e744b90af0d42d5de0e\n// zipcode 96749\n\nexport let getVenues = () => {\n  return fetch(`https://api.foursquare.com/v2/venues/explore?categoryId=4bf58dd8d48988d118951735&near=96749&client_id=${CLIENT}&client_secret=${SECRET}&v=20190212\n`)\n    .then(response => response.json())\n    .then(result => result.response.groups[0].items);\n};\n\n","import React from \"react\";\n\nconst Footer = () => (\n  <div id=\"footer\">\n    <p>&copy; Neighborhood Maps {(new Date()).getFullYear()}</p>\n    <p><a href=\"https://developer.foursquare.com\" alt=\"Foursquare\">Powered by Foursquare Places API</a></p>\n    \n  </div>\n);\n\nexport default Footer;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./shared/components/layout/Header\";\nimport Content from \"./components/Content\";\nimport Footer from \"./shared/components/layout/Footer\";\n\nclass App extends Component {\n  initMap() {\n    // The map, centered at SkyFarm\n    let map = new window.google.maps.Map(document.getElementById(\"map\"), {\n      center: {lat: 19.699661135673523, lng: -155.064081},\n      zoom: 12\n    });\n    window.googleMapObject = map;\n  }\n  // loads a script into index.html\n  loadScript() {\n    let script = document.getElementsByTagName(\"script\")[0];\n    let scriptFromMap = this.makeMapScript();\n    script.parentNode.insertBefore(scriptFromMap, script[0]);\n    scriptFromMap.onerror = () => {\n      alert(\"Error loading map data\" + this.src);\n    }\n    window.initMap = this.initMap;\n  }\n  // makes script for getting google map element\n  makeMapScript() {\n    let mapScript = document.createElement(\"script\");\n    let API_KEY = \"AIzaSyBNjuIdOOQLuOuJqDv9n6PW5veI15v2M1U\";\n    let src = `https://maps.googleapis.com/maps/api/js?key=${API_KEY}&callback=initMap`;\n    mapScript.src = src;\n    mapScript.async = true;\n    mapScript.defer = true;\n    return mapScript;\n  }\n  render() {\n    this.loadScript();\n    return (\n      <div className=\"App\">\n        <Header />\n        <Content />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nregisterServiceWorker(); // to complete\n\n","export default function registerServiceWorker() {\n  if ('serviceWorker' in navigator) {\n    window.addEventListener('load', function() {\n      navigator.serviceWorker.register('/sw.js').then(function() {\n        console.log('Registration worked!');\n      }).catch(function() {\n        console.log('Registration failed!');  \n      });\n    });\n  }\n}"],"sourceRoot":""}